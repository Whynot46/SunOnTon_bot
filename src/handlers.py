from aiogram.filters.command import Command
from aiogram import F, Bot
from aiogram.types import Message, ReplyKeyboardRemove
from time import sleep
from aiogram.types import FSInputFile
from aiogram import Router
from aiogram.fsm.state import StatesGroup, State
from aiogram.fsm.context import FSMContext
import asyncio
from datetime import datetime, timedelta
import src.keyboards as kb
import src.db as db


router = Router()


@router.message(F.text, Command("start"))
async def start_loop(message: Message, bot: Bot):
    await message.answer("‚òÄÔ∏è–ü—Ä–∏–≤–µ—Ç! :3 –î–ª—è –Ω–∞—á–∞–ª–∞, –∑–∞–π–º–∏ –ª–µ–∂–∞–∫ –Ω–∞ –Ω–∞—à–µ–º –ø–ª—è–∂–µüëá", reply_markup=kb.take_seat_keyboard)
    if not db.is_old(message.from_user.id):
        db.add_new_user(message.from_user.id, message.from_user.full_name)
    db.add_shells(message.from_user.id, 10)
    db.add_shells(message.from_user.id, 10)


@router.message(F.text == "–ó–∞–Ω—è—Ç—å –º–µ—Å—Ç–æüèñ")
async def take_seat(message: Message, bot: Bot):
    await message.answer("üîÜ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –Ω–∞ –ø–ª—è–∂ SUN in SUM!\n"
                        "–¢—É—Ç, —Ç—ã –º–æ–∂–µ—à—å –Ω–∞—á–∞—Ç—å —Å–æ–±–∏—Ä–∞—Ç—å —Ä–∞–∫—É—à–∫–∏üêö, –∫–æ—Ç–æ—Ä—ã–µ, –ø–æ–∑–∂–µ, –º–æ–∂–Ω–æ –±—É–¥–µ—Ç –æ–±–º–µ–Ω—è—Ç—å –Ω–∞ —Å–æ–ª–Ω—ã—à–∫–∏ $SUNüåû\n"
                        "–ß–µ–º –∑–∞–π–º–µ–º—Å—è —Å–µ–≥–æ–¥–Ω—è?"
                        , reply_markup=kb.main_keyboard)
    
    
@router.message(F.text == "–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—É–º–∫—Éüëõ")
async def —Åheck_bag(message: Message, bot: Bot):
    user_balance = db.get_balance(message.from_user.id)
    await message.answer(f"–ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —É —Ç–µ–±—è –∏–º–µ–µ—Ç—Å—è {user_balance} —Ä–∞–∫—É—à–µ–∫üêö", reply_markup=kb.back_to_main_keyboard)
    
    
@router.message(F.text == "–ü–æ–¥–∞—Ä–∏—Ç—å –¥—Ä—É–≥—É –∫–æ–∫—Ç–µ–π–ª—åüçπ")
async def gift_cocktail(message: Message, bot: Bot):
    user_ref_link = f"—Ö—Ç—Ç–ø—Å:\\—Ç.–º–µ\—Ä–µ—Ñ–µ—Ä–∞—Å—Å—ã–ª–∫–∞-{message.from_user.id}"
    await message.answer(f"–ü—Ä–∏–≥–ª–∞—Å–∏ –¥—Ä—É–≥–∞ –ø–æ–ø–∏—Ç—å –∫–æ–∫—Ç–µ–π–ª–∏ –Ω–∞ –Ω–∞—à –ø–ª—è–∂, –∏ –ø–æ–ª—É—á–∏ 20 —Ä–∞–∫—É—à–µ–∫ –≤ –ø–æ–¥–∞—Ä–æ–∫!"
                        f"{user_ref_link}"
                        , reply_markup=kb.back_to_main_keyboard)
    

@router.message(F.text == "–ü—Ä–∞–≤–∏–ª–∞ü••")
async def —Åheck_bag(message: Message, bot: Bot):
    user_balance = message.from_user.id
    await message.answer("–ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ –±—É–¥—É—â–µ–º—É —Ä—ã–Ω–∫—É —Ä–∞–∫—É—à–µ–∫ –∏ —Å–æ–ª–Ω—Ü, —Ç—ã –¥–æ–ª–∂–µ–Ω:\n"
                        "1.  –ù–∞—Ö–æ–¥–∏—Ç—Å—è –Ω–∞ –Ω–∞—à–µ–º –ø–ª—è–∂–Ω–æ–º –∫–∞–Ω–∞–ª–µ\n"
                        "2. –ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –∫–∞–∫ –º–∏–Ω–∏–º—É–º 2 –¥—Ä—É–≥–∞\n"
                        "3. –£–∫–∞–∑–∞—Ç—å —Å–≤–æ–π —Ö–æ–ª–æ–¥–Ω—ã–π TON –∫–æ—à–µ–ª–µ–∫"
                        , reply_markup=kb.back_to_main_keyboard)


@router.message(F.text == "–ü—Ä–∏–≤—è–∑–∞—Ç—å —Å–≤–æ–π TONüíé")
async def —Åheck_bag(message: Message, bot: Bot):
    await message.answer("–£–∫–∞–∂–∏ —Å–≤–æ–π TON –∫–æ—à–µ–ª–µ–∫ —Ñ–æ—Ä–º–∞—Ç–∞ EQ, UQ –∏–ª–∏ –¥–æ–º–µ–Ω, –µ—Å–ª–∏ –∏–º–µ–µ—Ç—Å—è", reply_markup=kb.back_to_main_keyboard)
    

@router.message(F.text == "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
async def —Åheck_bag(message: Message, bot: Bot):
    await message.answer("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", reply_markup=kb.main_keyboard)
    

@router.message(F.text)
async def unidentified_text(message: Message, bot: Bot):
    await message.answer("üîÜ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –Ω–∞ –ø–ª—è–∂ SUN in SUM!\n"
                        "–¢—É—Ç, —Ç—ã –º–æ–∂–µ—à—å –Ω–∞—á–∞—Ç—å —Å–æ–±–∏—Ä–∞—Ç—å —Ä–∞–∫—É—à–∫–∏üêö, –∫–æ—Ç–æ—Ä—ã–µ, –ø–æ–∑–∂–µ, –º–æ–∂–Ω–æ –±—É–¥–µ—Ç –æ–±–º–µ–Ω—è—Ç—å –Ω–∞ —Å–æ–ª–Ω—ã—à–∫–∏ $SUNüåû\n"
                        "–ß–µ–º –∑–∞–π–º–µ–º—Å—è —Å–µ–≥–æ–¥–Ω—è?"
                        , reply_markup=kb.main_keyboard)