from aiogram.filters.command import Command
from aiogram import F, Bot
from aiogram.types import Message, ReplyKeyboardRemove
from aiogram.types import FSInputFile
from aiogram import Router
from aiogram.fsm.state import StatesGroup, State
from aiogram.fsm.context import FSMContext
import asyncio
from aiogram.utils.deep_linking import create_start_link, decode_payload
import src.keyboards as kb
import src.db as db
import base64


router = Router()
CHANEL_NAME = "@test_chanel_46"


class User_TON(StatesGroup):
    link = State()


async def is_referral(message):
    encoded_string = message.text
    encoded_string = encoded_string.replace("/start ", "")
    if len(encoded_string) > 7:
        if len(encoded_string)%4 != 0:
            encoded_string += "=" * (4 - len(encoded_string)%4)
        decoded_id = base64.b64decode(encoded_string).decode()
        
        if decoded_id != str(message.from_user.id):
            ref_fullname = db.get_fullname(decoded_id)
            db.add_invitation(decoded_id)
            db.add_shells(decoded_id, 20)
            db.add_shells(message.from_user.id, 20)
            await message.answer(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {ref_fullname} –æ—Ç–ø—Ä–∞–≤–∏–ª –≤–∞–º –∫–æ–∫—Ç–µ–π–ª—åüçπ")
            return True
    
    return False


@router.message(F.text, Command("start"))
async def start_loop(message: Message, bot: Bot):
    await message.answer(f"‚òÄÔ∏è–ü—Ä–∏–≤–µ—Ç! :3 –î–ª—è –Ω–∞—á–∞–ª–∞, –∑–∞–π–º–∏ –ª–µ–∂–∞–∫ –Ω–∞ –Ω–∞—à–µ–º –ø–ª—è–∂–µüëá\n{CHANEL_NAME}", reply_markup=kb.take_seat_keyboard)
    if not db.is_old(message.from_user.id):
        db.add_new_user(message.from_user.id, message.from_user.full_name)
        
    await is_referral(message)


@router.message(F.text == "–ó–∞–Ω—è—Ç—å –º–µ—Å—Ç–æüèñ")
async def take_seat(message: Message, bot: Bot):
    user_channel_status = await bot.get_chat_member(chat_id=f"{CHANEL_NAME}", user_id=message.from_user.id)
    if user_channel_status.status != 'left':
        await message.answer("üîÜ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –Ω–∞ –ø–ª—è–∂ SUN in SUM!\n"
                        "–¢—É—Ç, —Ç—ã –º–æ–∂–µ—à—å –Ω–∞—á–∞—Ç—å —Å–æ–±–∏—Ä–∞—Ç—å —Ä–∞–∫—É—à–∫–∏üêö, –∫–æ—Ç–æ—Ä—ã–µ, –ø–æ–∑–∂–µ, –º–æ–∂–Ω–æ –±—É–¥–µ—Ç –æ–±–º–µ–Ω—è—Ç—å –Ω–∞ —Å–æ–ª–Ω—ã—à–∫–∏ $SUNüåû\n"
                        "–ß–µ–º –∑–∞–π–º–µ–º—Å—è —Å–µ–≥–æ–¥–Ω—è?"
                        , reply_markup=kb.main_keyboard)
    else:
        await message.answer(f"–î–ª—è –Ω–∞—á–∞–ª–∞, –∑–∞–π–º–∏ –ª–µ–∂–∞–∫ –Ω–∞ –Ω–∞—à–µ–º –ø–ª—è–∂–µüëá\n{CHANEL_NAME}", reply_markup=kb.take_seat_done_keyboard)


@router.message(F.text == "–ó–∞–Ω—è–ª!‚õ±")
async def —Åheck_bag(message: Message, bot: Bot):
    user_channel_status = await bot.get_chat_member(chat_id=f"{CHANEL_NAME}", user_id=message.from_user.id)
    if user_channel_status.status != 'left':
        await message.answer("üîÜ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –Ω–∞ –ø–ª—è–∂ SUN in SUM!\n"
                        "–¢—É—Ç, —Ç—ã –º–æ–∂–µ—à—å –Ω–∞—á–∞—Ç—å —Å–æ–±–∏—Ä–∞—Ç—å —Ä–∞–∫—É—à–∫–∏üêö, –∫–æ—Ç–æ—Ä—ã–µ, –ø–æ–∑–∂–µ, –º–æ–∂–Ω–æ –±—É–¥–µ—Ç –æ–±–º–µ–Ω—è—Ç—å –Ω–∞ —Å–æ–ª–Ω—ã—à–∫–∏ $SUNüåû\n"
                        "–ß–µ–º –∑–∞–π–º–µ–º—Å—è —Å–µ–≥–æ–¥–Ω—è?"
                        , reply_markup=kb.main_keyboard)
    else:
        await message.answer(f"–î–ª—è –Ω–∞—á–∞–ª–∞, –∑–∞–π–º–∏ –ª–µ–∂–∞–∫ –Ω–∞ –Ω–∞—à–µ–º –ø–ª—è–∂–µüëá\n{CHANEL_NAME}", reply_markup=kb.take_seat_done_keyboard)
    
    
@router.message(F.text == "–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—É–º–∫—Éüëõ")
async def —Åheck_bag(message: Message, bot: Bot):
    user_balance = db.get_balance(message.from_user.id)
    await message.answer(f"–ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —É —Ç–µ–±—è –∏–º–µ–µ—Ç—Å—è {user_balance} —Ä–∞–∫—É—à–µ–∫üêö", reply_markup=kb.back_to_main_keyboard)
    
    
@router.message(F.text == "–ü–æ–¥–∞—Ä–∏—Ç—å –¥—Ä—É–≥—É –∫–æ–∫—Ç–µ–π–ª—åüçπ")
async def gift_cocktail(message: Message, bot: Bot):
    user_ref_link = await create_start_link(bot, str(message.from_user.id), encode=True)
    await message.answer(f"–ü—Ä–∏–≥–ª–∞—Å–∏ –¥—Ä—É–≥–∞ –ø–æ–ø–∏—Ç—å –∫–æ–∫—Ç–µ–π–ª–∏ –Ω–∞ –Ω–∞—à –ø–ª—è–∂, –∏ –ø–æ–ª—É—á–∏ 20 —Ä–∞–∫—É—à–µ–∫ –≤ –ø–æ–¥–∞—Ä–æ–∫!\n"
                        f"{user_ref_link}"
                        , reply_markup=kb.back_to_main_keyboard)
    

@router.message(F.text == "–ü—Ä–∞–≤–∏–ª–∞ü••")
async def —Åheck_bag(message: Message, bot: Bot):
    user_balance = message.from_user.id
    await message.answer("–ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ –±—É–¥—É—â–µ–º—É —Ä—ã–Ω–∫—É —Ä–∞–∫—É—à–µ–∫ –∏ —Å–æ–ª–Ω—Ü, —Ç—ã –¥–æ–ª–∂–µ–Ω:\n"
                        "1.  –ù–∞—Ö–æ–¥–∏—Ç—Å—è –Ω–∞ –Ω–∞—à–µ–º –ø–ª—è–∂–Ω–æ–º –∫–∞–Ω–∞–ª–µ\n"
                        "2. –ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –∫–∞–∫ –º–∏–Ω–∏–º—É–º 2 –¥—Ä—É–≥–∞\n"
                        "3. –£–∫–∞–∑–∞—Ç—å —Å–≤–æ–π —Ö–æ–ª–æ–¥–Ω—ã–π TON –∫–æ—à–µ–ª–µ–∫"
                        , reply_markup=kb.back_to_main_keyboard)


@router.message(F.text == "–ü—Ä–∏–≤—è–∑–∞—Ç—å —Å–≤–æ–π TONüíé")
async def —Åheck_bag(message: Message, bot: Bot, state = FSMContext):
    await state.set_state(User_TON.link)
    await message.answer("–£–∫–∞–∂–∏ —Å–≤–æ–π TON –∫–æ—à–µ–ª–µ–∫ —Ñ–æ—Ä–º–∞—Ç–∞ EQ, UQ –∏–ª–∏ –¥–æ–º–µ–Ω, –µ—Å–ª–∏ –∏–º–µ–µ—Ç—Å—è", reply_markup=kb.back_to_main_keyboard)
    
    
@router.message(User_TON.link)
async def get_name(message: Message,state = FSMContext):
    if message.text != "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é":
        await state.update_data(link = message.text)
        db.add_ton_link(message.from_user.id, message.text)
        await message.answer("–í–∞—à TON –∫–æ—à–µ–ª–µ–∫ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω—ë–Ω!", reply_markup=kb.main_keyboard)
        

@router.message(F.text == "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
async def —Åheck_bag(message: Message, bot: Bot):
    await message.answer("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", reply_markup=kb.main_keyboard)
    

@router.message(F.text)
async def unidentified_text(message: Message, bot: Bot):
    user_channel_status = await bot.get_chat_member(chat_id=f"{CHANEL_NAME}", user_id=message.from_user.id)
    if user_channel_status.status != 'left':
        await message.answer("üîÜ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –Ω–∞ –ø–ª—è–∂ SUN in SUM!\n"
                        "–¢—É—Ç, —Ç—ã –º–æ–∂–µ—à—å –Ω–∞—á–∞—Ç—å —Å–æ–±–∏—Ä–∞—Ç—å —Ä–∞–∫—É—à–∫–∏üêö, –∫–æ—Ç–æ—Ä—ã–µ, –ø–æ–∑–∂–µ, –º–æ–∂–Ω–æ –±—É–¥–µ—Ç –æ–±–º–µ–Ω—è—Ç—å –Ω–∞ —Å–æ–ª–Ω—ã—à–∫–∏ $SUNüåû\n"
                        "–ß–µ–º –∑–∞–π–º–µ–º—Å—è —Å–µ–≥–æ–¥–Ω—è?"
                        , reply_markup=kb.main_keyboard)
    else:
        await message.answer(f"–î–ª—è –Ω–∞—á–∞–ª–∞, –∑–∞–π–º–∏ –ª–µ–∂–∞–∫ –Ω–∞ –Ω–∞—à–µ–º –ø–ª—è–∂–µüëá\n{CHANEL_NAME}", reply_markup=kb.take_seat_done_keyboard)